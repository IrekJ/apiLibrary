/* 
    * ES6 REST api library with javascript fetch() function
    *
    * @version 1.0.0
    * @autor Irek Janek
    * @license MIT
    * 
 **/

class ApiFetch {
    // GET - url format /api/items  |  /api/items/id
    get(url) {
        return new Promise((resolve, reject) => {
            fetch(url)
                .then((res) => res.json())
                .then((data) => resolve(data))
                .catch(err => reject(err));
        })
    }

    // POST - url format /api/items headers generated by lib, body: json formated record
    post(url, data) {
        return new Promise((resolve, reject) => {
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then((res) => res.json())
                .then((response) => resolve(response))
                .catch(err => reject(err));
        })
    }

    // PUT - url format /api/items/id headers generated by lib, body: json formated record
    put(url, body) {
        return new Promise((resolve, reject) => {
            fetch(url, {
                method: 'PUT',
                headers: {
                    'Content-type': 'application/json'
                },
                body: JSON.stringify(body)
            })
                .then((res) => res.json())
                .then((data) => resolve(data))
                .catch(err => reject(err));
        })
    }

    // DELETE - url format /api/items
    delete(url) {
        return new Promise((resolve, reject) => {
            fetch(url, {
                method: 'DELETE'
            })
                .then((res) => res.json())
                .then(() => resolve('Status:200'))
                .catch(err => reject(err));
        })
    }
}